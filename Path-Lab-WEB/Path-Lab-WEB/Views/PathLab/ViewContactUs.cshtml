@model Path_Lab_ENTITY.eSaveContact

@{
    Layout = "~/Views/Shared/NavSideBar.cshtml";
}

<!-- Include Summernote CSS and JS CDN -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.18/summernote-bs4.min.css" rel="stylesheet">
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.18/summernote-bs4.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">

<style>
    .input-container input[type="text"] {
        flex: 1;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 20px;
        font-size: 16px;
        outline: none;
        margin-right: 10px;
    }

    .input-container button {
        padding: 10px 15px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 20px;
        font-size: 16px;
        cursor: pointer;
    }

        .input-container button:hover {
            background-color: #0056b3;
        }




    .card-bodys {
        display: flex;
        flex-direction: column;
        height: 500px; /* Adjust as needed */
        max-height: 80vh; /* Make it responsive based on viewport height */
    }

    .chat-container {
        flex: 1;
        overflow-y: auto;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        margin-bottom: 10px;
        display: flex;
        flex-direction: column;
    }

    .message {
        padding: 8px 12px;
        margin: 5px 0;
        border-radius: 8px;
        max-width: 80%;
    }

        .message.sent {
            align-self: flex-end;
            background-color: #daf1da;
        }

        .message.received {
            align-self: flex-start;
            background-color: #f1f0f0;
        }

    .input-container {
        display: flex;
        gap: 10px;
    }
    /*.chat-container {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        width: 100%;
        max-width: 600px;
        margin: 0 auto;
    }

    .message {
        margin-bottom: 10px;
        max-width: 70%;
        padding: 10px;
        border-radius: 10px;
        line-height: 1.5;
        display: inline-block;
    }

        .message.received {
            align-self: flex-start;
            background-color: #e4e6eb;
        }

        .message.sent {
            align-self: flex-end;
            background-color: #DCF8C6;
        }

    .input-container {
        display: flex;
        border-top: 1px solid #ccc;
        padding-top: 10px;
    }

        .input-container input[type="text"] {
            flex: 1;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 20px;
            font-size: 16px;
            outline: none;
            margin-right: 10px;
        }

        .input-container button {
            padding: 10px 15px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 20px;
            font-size: 16px;
            cursor: pointer;
        }

            .input-container button:hover {
                background-color: #0056b3;
            }*/
</style>

@using (Html.BeginForm("ViewContactUs", "PathLab", FormMethod.Post, new { enctype = "multipart/form-data" }))
{

    <div class="container-fluid">

        <!-- DataTales Example -->
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Contact Us Details</h6>
            </div>
            <div class="card-header py-12">
                <h6 style="text-align:right"><a href="~/PathLab/Index">Back To DashBoard</a></h6>
            </div>
            <div class="card-body">

                <div class="row">
                    <div class="col-sm-6">
                        <div class="row">
                            <div class="col-sm-5">
                                <label for="orangeForm-name37">Contact By Name</label>
                            </div>
                            <div class="col-sm-7">
                                @Html.DisplayFor(model => model.ContactName)
                                @Html.HiddenFor(model => model.ContactName)
                                @Html.HiddenFor(model => model.ContactUsID)
                                @Html.HiddenFor(model => model.ContactSubject)
                                @Html.HiddenFor(model => model.ContactMessage)
                                @Html.HiddenFor(model => model.ContactEmail)
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="row">
                            <div class="col-sm-5">
                                <label for="orangeForm-name37">Contact By Email</label>
                            </div>
                            <div class="col-sm-7">
                                @Html.DisplayFor(model => model.ContactEmail)
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Contact Us Messages</h6>
        </div>
        <div class="card-body card-bodys">
            <div class="chat-container">
                @foreach (var i in ViewBag.ContactListForMessage)
                {
                    if (i.SendBy == "Admin")
                    {
                        <div class="message sent">
                            @i.ContactMessage
                        </div>
                    }
                    else
                    {
                        <div class="message received">
                            <b>Subject : </b>@i.ContactSubject
                            <hr>
                            @i.ContactMessage
                        </div>
                    }
                }

            </div>
            <div class="input-container">
                @Html.TextBoxFor(m => m.ContactMessageByAdmin, new { @type = "text", @placeholder = "Type your message here..." })
                @* <input type="text" placeholder="Type your message here..." /> *@
                <button value="SaveByAdmin" name="Command">Send</button>
            </div>
            @*    <div class="text-center py-4">
        <button value="SaveByAdmin" name="Command" class="btn btn-success btn-outline-primary">Save Data<i class="fa fa-paper-plane-o ml-1"></i></button>
        </div> *@
        </div>
    </div>
}

<script>
    // Function to keep the chat container scrolled to the bottom
    function scrollToBottom() {
        var chatContainer = document.querySelector('.chat-container');
        chatContainer.scrollTop = chatContainer.scrollHeight;
    }

    // Call scrollToBottom initially to start at the bottom
    document.addEventListener('DOMContentLoaded', scrollToBottom);

    // Call scrollToBottom whenever you send a new message
    document.querySelector('button[name="Command"]').addEventListener('click', function () {
        setTimeout(scrollToBottom, 100); // Adjust timeout if necessary
    });
</script>