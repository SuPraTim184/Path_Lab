@model Path_Lab_ENTITY.eChatUs

@{
    Layout = "~/Views/Shared/NavSideBar.cshtml";
}
<style>

    .input-container input[type="text"] {
        flex: 1;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 20px;
        font-size: 16px;
        outline: none;
        margin-right: 10px;
    }

    .input-container button {
        padding: 10px 15px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 20px;
        font-size: 16px;
        cursor: pointer;
    }

        .input-container button:hover {
            background-color: #0056b3;
        }




    .card-body {
        display: flex;
        flex-direction: column;
        height: 500px; /* Adjust as needed */
        max-height: 80vh; /* Make it responsive based on viewport height */
    }

    .chat-container {
        flex: 1;
        overflow-y: auto;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        margin-bottom: 10px;
        display: flex;
        flex-direction: column;
    }

    .message {
        padding: 8px 12px;
        margin: 5px 0;
        border-radius: 8px;
        max-width: 80%;
    }

        .message.sent {
            align-self: flex-end;
            background-color: #daf1da;
        }

        .message.received {
            align-self: flex-start;
            background-color: #f1f0f0;
        }

    .input-container {
        display: flex;
        gap: 10px;
    }
</style>

@using (Html.BeginForm("ChatUsAdmin", "PathLab", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @* @Html.HiddenFor(mbox=> mbox.) *@
    <div class="container-fluid">

        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">@Model.FullName</h6>
            </div>
            <div class="card-body">
                <div class="chat-container">
                    @foreach (var i in ViewBag.ChatUsList)
                    {
                        if (i.ReplyByName == "Admin")
                        {
                            <div class="message sent">
                                @i.ChatComment
                            </div>
                        }
                        else
                        {
                            <div class="message received">
                                @i.ChatComment
                            </div>
                        }
                    }

                </div>
                <div class="input-container">
                    @Html.TextBoxFor(m => m.ChatComment, new { @type = "text", @placeholder = "Type your message here..." })
                    <button value="SaveChat" name="Command">Send</button>
                </div>
            </div>
        </div>

    </div>
}

<script>
    // Function to keep the chat container scrolled to the bottom
    function scrollToBottom() {
        var chatContainer = document.querySelector('.chat-container');
        chatContainer.scrollTop = chatContainer.scrollHeight;
    }

    // Call scrollToBottom initially to start at the bottom
    document.addEventListener('DOMContentLoaded', scrollToBottom);

    // Call scrollToBottom whenever you send a new message
    document.querySelector('button[name="Command"]').addEventListener('click', function () {
        setTimeout(scrollToBottom, 100); // Adjust timeout if necessary
    });
</script>
